//Think Java: 7.9	1
/*
Exercise 1  
Consider the following methods:

public static void main(String[] args) {
    loop(10);
}

public static void loop(int n) {
    int i = n;
    while (i > 1) {
        System.out.println(i);
        if (i % 2 == 0) {
            i = i / 2;
        } else {
            i = i + 1;
        }
    }
}
1. Draw a table that shows the value of the variables i and n during the execution of loop. The table should contain one column for each variable and one line for each iteration.
2. What is the output of this program?
3. Can you prove that this loop terminates for any positive value of n?
*/

1. TABLE
i    n
10   10
5    10
6    10
3    10
1    10


2. OUTPUT
10
5
6
3
1

3. PROOF
The code continues to loop while the value n is greater than 1.  For any even integer, n is always cut in half, such that any integer greater than 1 will always decrease in value.  For any odd integers, n will increase by one, becoming an even integer.  The only time the cycle of adding 1 and dividing by 2 would NOT decrease the value of n is when n is already 1.  Because n will always decrease down to 1, then this function works for any positive integer n.



